openapi: 3.0.0
info:
  title: Planinha
  description: API do Planinha.
  version: 1.0.0
servers:
- url: http://localhost:8080/planinha/
  description: localhost
- url: http://planinha.herokuapp.com/v1.0
  description: herokuapp
security:
- accessCode:
  - read
  - write
paths:
  /contas:
    get:
      summary: Lista as contas
      description: Lista as contas existentes.
      tags:
        - Conta
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayDeConta'
    post:
      summary: Cria uma conta
      tags:
        - Conta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContaPatch'
        required: true
      responses:
        204:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta'
  /contas/{conta_id}:
    get:
      summary: Recupera uma Conta
      tags:
        - Conta
      parameters:
      - name: conta_id
        in: path
        description: O id da Conta.
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta'
        404:
          description: A conta não exsite.
    put:
      summary: Altera o nome de uma conta
      tags:
        - Conta
      parameters:
      - name: conta_id
        in: path
        description: O id da Conta.
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContaPatch'
        required: true
      responses:
        200:
          description: Conta alterada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta'
        404:
          description: A conta não exsite.
    delete:
      summary: Deleta uma conta.
      tags:
        - Conta
      parameters:
      - name: conta_id
        in: path
        description: O id da Conta a ser deletada.
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        204:
          description: Deletado
        404:
          description: A conta nem existe.
        409:
           description: |
            Existem operações referenciando esta conta e ela não pode ser 
            removida.
  /fatos:
    get:
      summary: Lista fatos
      tags:
        - Fato
      parameters:
      - name: mes
        in: query
        description: |
          Mês e ano, no formato MM-YYYY, dos fatos a serem retornados.

          É equivalente a passar o parâmetro dataMinima com o primeiro dia desse mes e dataMaxima com o último.

          Esse parâmetro não pode ser usado em conjunto com dataMinima ou dataMaxima.
        required: false
        schema:
          type: string
      - name: dataMinima
        in: query
        description: |
          A menor data aceitável para os fatos retornados. Fatos anteriores a
          esta data não são retornados.

          Esse parâmetro não pode ser usado em conjunto com o parâmero mes.
        required: false
        schema:
          type: string
          format: date
      - name: dataMaxima
        in: query
        description: |
          A maior data aceitável para os fatos retornados. Fatos posteriores a
          esta data não são retornados.

          Esse parâmetro não pode ser usando em conjunto com o parâmero mes.
        required: false
        schema:
          type: string
          format: date
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fato'
    post:
      summary: Cria um fato.
      tags:
        - Fato
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FatoPatch'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fato'
  /fatos/{fato_id}:
    get:
      summary: Recupera um Fato
      description: Recupera um Fato.
      tags:
        - Fato
      parameters:
      - name: fato_id
        in: path
        description: O id do fato.
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fato'
        404:
          description: O Fato nem existe.
  /operacoes/:
    get:
      summary: Lista operações que se adequam aos critérios definidos.
      tags:
        - Operação
      parameters:
      - name: mes
        in: query
        description: |
          Mês e ano, no formato MM-YYYY, em que as operações aconteceram.

          É equivalente a passar o parâmetro dataMinima com o primeiro dia desse mês e dataMaxima com o último.
        required: false
        schema:
          type: string
      - name: dataMinima
        in: query
        description: |
          A data limite mínima das operações a serem listadas. Operações que 
          aconteceram antes dessa data não serão listadas.
        required: false
        schema:
          type: string
          format: date
      - name: dataMaxima
        in: query
        description: |
          A data limite máxima das operações a serem listadas. Operações que 
          aconteceram depois dessa data não serão listadas.
        required: false
        schema:
          type: string
          format: date
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operacao'
    post:
      summary: Cria uma operação.
      tags:
        - Operação
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperacaoCrua'
        required: true
      responses:
        201:
          description: A operação foi criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operacao'
  /operacoes/{operacao_id}:
    parameters:
      - name: operacao_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
    get:
      summary: Recupera uma operação.
      tags:
        - Operação
      responses:
        200:
          description: A operação foi recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operacao'
        404:
          description: A operação não existe.
    delete:
      summary: Deleta uma operação.
      tags:
        - Operação
      responses:
        204:
          description: A operação foi deletada com sucesso.
        404:
          description: Essa operação nem existe.
  /operacoes/{operacao_id}/movimentacoes:
    get:
      summary: Lista as movimentaçoes de uma dada operação.
      tags:
        - Operação
      parameters:
      - name: operacao_id
        in: path
        description: A operação da qual as movimentações fazem parte.
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        200:
          description: |
            A lista, possivelmente vazia, foi recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movimentacao'
        404:
          description: A operação nem existe.
  /contas/{id}/extratos:
    get:
      summary: Retorna os extratos de uma conta
      tags:
        - Extrato
      parameters:
      - name: id
        in: path
        description: o id da conta de que se quer o extrato.
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtratoResumido'
        404:
          description: O extrato (ou a conta) não existe.
  /contas/{idConta}/extratos/{id}:
    get:
      summary: Retorna um extrato específico
      tags:
        - Extrato
      parameters:
      - name: idConta
        in: path
        description: O id da conta a que esse extrato pertence
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      - name: id
        in: path
        description: o id do extrato.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extrato'
        404:
          description: O extrato não exsite.
components:
  schemas:
    Id:
      $ref: "types.yaml#/Id"
    Conta:
      $ref: "conta.yaml#/Conta"
    ArrayDeConta:
      $ref: "conta.yaml#/ArrayDeConta"
    ContaPatch:
      $ref: "conta.yaml#/ContaPatch"
    Fato:
      $ref: "fato.yaml#/Fato"
    FatoPatch:
      $ref: "fato.yaml#/FatoPatch"
    Extrato:
      $ref: "extrato.yaml#/Extrato"
    ExtratoResumido:
      $ref: "extrato.yaml#/ExtratoResumido"
    Movimentacao:
      $ref: "movimentacao.yaml#/Movimentacao"
    Operacao:
      $ref: "operacao.yaml#/Operacao" 
    OperacaoCrua:
      $ref: "operacao.yaml#/OperacaoCrua"