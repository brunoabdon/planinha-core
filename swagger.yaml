openapi: 3.0.0
info:
  title: Planinha
  description: API do Planinha.
  version: 1.0.0
servers:
- url: http://localhost:8080/planinha/
  description: localhost
- url: http://planinha.herokuapp.com/v1.0
  description: herokuapp
- url: https://virtserver.swaggerhub.com/brunoabdon/planinha/1.0.0
  description: SwaggerHub API Auto Mocking
security:
- accessCode:
  - read
  - write
paths:
  /contas:
    get:
      summary: Lista as contas
      description: Lista as contas existentes.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayDeConta'
    post:
      summary: Cria uma conta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContaPatch'
        required: true
      responses:
        204:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta'
  /contas/{id}:
    get:
      summary: Recupera uma Conta
      description: Recupera uma Conta.
      parameters:
      - name: id
        in: path
        description: o id da Conta.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta'
        404:
          description: A conta não exsite.
    post:
      summary: Altera o nome de uma conta
      parameters:
      - name: id
        in: path
        description: o id da Conta.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContaPatch'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conta'
        404:
          description: A conta não exsite.
    delete:
      summary: Deleta uma conta.
      parameters:
      - name: id
        in: path
        description: o id da Conta.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        204:
          description: Deletado
        404:
          description: A conta não exsite.
  /fatos:
    get:
      summary: Lista fatos
      description: Lista fatos.
      parameters:
      - name: mes
        in: query
        description: |
          Mês e ano, no formato MM-YYYY, dos fatos a serem retornados.

          É equivalente a passar o parâmetro dataMinima com o primeiro dia desse mes e dataMaxima com o último.

          Esse parâmetro não pode ser usando em conjunto com dataMinima ou dataMaxima.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dataMinima
        in: query
        description: |
          Retornar apenas fatos cujo dia seja essa data ou mais recente.

          Esse parâmetro não pode ser usando em conjunto com o parâmero mes.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: dataMaxima
        in: query
        description: |
          Retornar apenas fatos cujo dia não seja posterior a essa data.

          Esse parâmetro não pode ser usando em conjunto com o parâmero mes.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fato'
    post:
      summary: Cria um fato
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FatoPatch'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fato'
  /fatos/{id}:
    get:
      summary: Recupera um Fato
      description: Recupera um Fato.
      parameters:
      - name: id
        in: path
        description: o id do fato.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fato'
        404:
          description: O Fato não exsite.
    post:
      summary: Altera o dia e/ou a descricao de um fato
      parameters:
      - name: id
        in: path
        description: o id do fato.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FatoPatch'
        required: true
      responses:
        200:
          description: Fato alterado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fato'
        404:
          description: A conta não exsite.
    delete:
      summary: Deleta um fato.
      parameters:
      - name: id
        in: path
        description: o id do fato.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        204:
          description: Deletado
        404:
          description: O fato não existe.
components:
  schemas:
    Id:
      minimum: 0
      type: integer
      format: int64
    Conta:
      required:
      - id
      - nome
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
    ArrayDeConta:
      type: array
      items:
        $ref: '#/components/schemas/Conta'
    ContaPatch:
      required:
      - nome
      type: object
      properties:
        nome:
          type: string
    Fato:
      required:
      - descricao
      - dia
      - id
      type: object
      properties:
        id:
          type: integer
        dia:
          type: string
          format: date
        descricao:
          type: string
    FatoPatch:
      type: object
      properties:
        dia:
          type: string
          format: date
        nome:
          type: string
